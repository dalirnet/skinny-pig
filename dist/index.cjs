"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("lodash"),t=require("chalk"),a=require("fs"),r=require("mustache"),o=require("path"),n=require("sharp"),i=require("url"),s=require("tesseract.js");function f(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=f(e),c=f(t),d=f(a),u=f(r),h=f(o),p=f(n),m=f(i);const g={CHANNEL:"blue",SEPARATOR:175,REFLECT:false,LOG:true},w=h.default.resolve(m.default.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),"..","..");let b=true;const y={info:c.default.gray,success:c.default.green,error:c.default.red,debug:c.default.yellow},x=(e,t,...a)=>{b&&console.log(y[e](`${(new Date).toISOString()}`,`[${l.default.upperFirst(t)}]`,...a))};exports.CONST=g,exports.butcher=(e,{channel:t="blue",separator:a=175,reflect:r=false,log:o=true}={})=>{b=o;const n=Date.now();return x("info","butcher","Starting"),new Promise((async(o,i)=>{try{const i=await(async(e,{channel:t="blue",separator:a=175}={})=>{const r=Date.now();x("info","cleaner","Starting");try{const o=p.default(e).extractChannel(t).raw();x("info","cleaner","Extracted",t,"channel");const{data:n,info:i}=await o.toBuffer({resolveWithObject:!0}),{width:s,height:f,channels:l}=i;let c=!1;const d=new Uint8ClampedArray(n.buffer).map(((e,t)=>(t%s==s-1&&e>5&&(c=!0),c&&e>a?0:255))),u=p.default(d,{raw:{width:s,height:f,channels:l}});x("info","cleaner","Cleaned pixels");const h=await u.trim().toBuffer({resolveWithObject:!0});x("info","cleaner","Trimed edges");const m={buffer:new Uint8ClampedArray(h.data.buffer),raw:{width:h.info.width,height:h.info.height,channels:h.info.channels},offset:{top:h.info.trimOffsetTop,left:h.info.trimOffsetLeft}},g={top:10,bottom:10,left:10,right:10,background:{r:255,g:255,b:255}},w=p.default(m.buffer,{raw:m.raw}).extend(g);x("info","cleaner","Extended edges");const b=await w.png().removeAlpha().toBuffer();return x("success","cleaner","Done in",(Date.now()-r)/1e3+"ms."),{buffer:b,width:s,height:f,crop:{top:Math.abs(m.offset.top)-g.top,left:Math.abs(m.offset.left)-g.left,width:m.raw.width+g.left+g.right,height:m.raw.height+g.top+g.bottom}}}catch(e){throw x("error","cleaner",e.message),e}})(e,{channel:t,separator:a}),f=await(async e=>{const t=Date.now();x("info","extractor","Starting");try{let a=null;const r=s.createWorker({gzip:!0,cacheMethod:"refresh",langPath:h.default.resolve(w,"data"),logger:({status:e})=>{a!==e&&(a=e,x("info","extractor",l.default.startCase(e)))}});await r.load(),await r.loadLanguage("eng"),await r.initialize("eng"),await r.setParameters({user_defined_dpi:"70"});const o=await r.recognize(e);await r.terminate();const n={pair:/^\w+(\s?)\/(\s?)\w+$/,entry:/^(enter|between|(\d+((\.\d+)?)))/i,stop:/^(stop|(\d+((\.\d+)?)))/i,targets:/^(target|(\d+((\.\d+)?)))/i},i=e=>e.match(/(\w+)/g),f=e=>{const t=e.match(/(\d+((\.\d+)?))/g);if(t)return l.default.filter(l.default.sortBy(l.default.map(t,(e=>l.default.toNumber(e)))))},c=l.default.reduce(o.data.lines,((e,t)=>(l.default.each(t.words,(a=>{const r=l.default.trim(a.text);l.default.each(e.patterns,((o,n)=>{if(r.match(o)){l.default.each(a.symbols,(({bbox:{x0:t,y0:a,x1:r,y1:o}})=>{e.coordinates.push({left:t,top:a,right:r,bottom:o})}));const o="pair"===n?i(r):f(r);if(o)return e.lines[n]=o,e.confidence.push(t.confidence),e.patterns=l.default.omit(e.patterns,[n]),!1}}))})),e)),{patterns:n,lines:{},coordinates:[],confidence:[]});return x("success","extractor","Done in",(Date.now()-t)/1e3+"ms."),{signal:c.lines,coordinates:c.coordinates,confidence:l.default.toSafeInteger(l.default.round(l.default.mean(c.confidence)))}}catch(e){throw x("error","extractor",e.message),e}})(i.buffer),c=[f.signal.pair,f.signal.entry,f.signal.stop,f.signal.targets];if(l.default.some(c,l.default.isEmpty))throw x("error","extractor","Invalid input"),new Error("Invalid input");const m={signal:f.signal,confidence:f.confidence};if(r){const t=await(async(e,{cleaned:t,extracted:a,reflect:r})=>{const o=Date.now();x("info","reflector","Starting");try{const n=h.default.resolve(w,"src","mask.mustache"),i=l.default.toString(d.default.readFileSync(n));x("info","reflector","Loading mask template");const s=l.default.map(a.coordinates,(({top:e,left:a,right:r,bottom:o})=>({top:t.crop.top+e,left:t.crop.left+a,width:r-a,height:o-e}))),f={top:l.default.min(l.default.map(s,"top")),left:l.default.min(l.default.map(s,"left")),bottom:l.default.max(l.default.map(s,(({top:e,height:t})=>e+t))),right:l.default.max(l.default.map(s,(({left:e,width:t})=>e+t)))},c=u.default.render(i,{width:t.width,height:t.height,coordinates:s});x("info","reflector","Rendred mask template");const m=[{input:new Buffer.from(c)}],g=await p.default(e).grayscale().composite(m).toBuffer();x("info","reflector","Composited mask layer");const b=await p.default(g).resize({width:680}).toBuffer({resolveWithObject:!0});x("info","reflector","Resized masked");const y=e=>l.default.floor(e*b.info.width/t.width),v=[{input:h.default.resolve(w,"src","tape.svg"),top:y(f.bottom)+20,left:0},{input:h.default.resolve(w,"src","butcher.svg"),top:b.info.height-280,left:y(f.right)+20}],D=await p.default(b.data).composite(v).sharpen().toBuffer();if(x("info","reflector","Composited ui layer"),l.default.isBoolean(r))return x("success","reflector","Done in",(Date.now()-o)/1e3+"ms."),D;const S=h.default.resolve(r);return d.default.writeFileSync(S,D),x("success","reflector","Done in",(Date.now()-o)/1e3+"ms."),S}catch(e){throw x("error","reflector",e.message),e}})(e,{cleaned:i,extracted:f,reflect:r});l.default.set(m,"reflect",t)}x("success","butcher","Done in",(Date.now()-n)/1e3+"ms."),o(m)}catch(e){x("error","butcher",e.message),i(e)}}))};