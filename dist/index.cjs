"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("lodash"),t=require("fs"),a=require("mustache"),r=require("path"),o=require("sharp"),n=require("url"),l=require("tesseract.js");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var f=i(e),s=i(t),c=i(a),d=i(r),u=i(o),h=i(n);const g={CHANNEL:"blue",SEPARATOR:175,REFLECT:false,LOG:false},p=d.default.resolve(h.default.fileURLToPath("undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),"..","..");let m=false;const w=(e,t,...a)=>{m&&console[e](`${(new Date).toISOString()}`,`[${f.default.upperFirst(t)}]`,...a)};exports.CONST=g,exports.butcher=(e,{channel:t="blue",separator:a=175,reflect:r=false,log:o=false}={})=>{m=o;const n=Date.now();return w("log","butcher","Starting"),new Promise((async(o,i)=>{try{const i=await(async(e,{channel:t="blue",separator:a=175}={})=>{const r=Date.now();w("log","cleaner","Starting");try{const o=u.default(e).extractChannel(t).raw(),{data:n,info:l}=await o.toBuffer({resolveWithObject:!0});w("log","cleaner","Extracted",t,"channel");const{width:i,height:f,channels:s}=l;let c=!1;const d=new Uint8ClampedArray(n.buffer).map(((e,t)=>(t%i==i-1&&e>5&&(c=!0),c&&e>a?0:255))),h=u.default(d,{raw:{width:i,height:f,channels:s}});w("log","cleaner","Cleaned pixels");const g=await h.trim().toBuffer({resolveWithObject:!0});w("log","cleaner","Trimed edges");const p={buffer:new Uint8ClampedArray(g.data.buffer),raw:{width:g.info.width,height:g.info.height,channels:g.info.channels},offset:{top:g.info.trimOffsetTop,left:g.info.trimOffsetLeft}},m={top:10,bottom:10,left:10,right:10,background:{r:255,g:255,b:255}},b=u.default(p.buffer,{raw:p.raw}).extend(m);w("log","cleaner","Extended edges");const y=await b.png().removeAlpha().toBuffer();return w("info","cleaner","Done in",(Date.now()-r)/1e3+"ms."),{buffer:y,width:i,height:f,crop:{top:Math.abs(p.offset.top)-m.top,left:Math.abs(p.offset.left)-m.left,width:p.raw.width+m.left+m.right,height:p.raw.height+m.top+m.bottom}}}catch(e){throw w("error","cleaner",e.message),e}})(e,{channel:t,separator:a}),h=await(async e=>{const t=Date.now();w("log","extractor","Starting");try{let a=null;const r=l.createWorker({gzip:!0,cacheMethod:"refresh",langPath:d.default.resolve(p,"data"),logger:({status:e})=>{a!==e&&(a=e,w("log","extractor",f.default.startCase(e)))}});await r.load(),await r.loadLanguage("eng"),await r.initialize("eng"),await r.setParameters({user_defined_dpi:"70"});const o=await r.recognize(e);await r.terminate();const n={pair:/^\w+(\s?)\/(\s?)\w+$/,entry:/^(enter|between|(\d+((\.\d+)?)))/i,stop:/^(stop|(\d+((\.\d+)?)))/i,targets:/^(target|(\d+((\.\d+)?)))/i},i=e=>e.match(/(\w+)/g),s=e=>{const t=e.match(/(\d+((\.\d+)?))/g);if(t)return f.default.filter(f.default.sortBy(f.default.map(t,(e=>f.default.toNumber(e)))))},c=f.default.reduce(o.data.lines,((e,t)=>(f.default.each(t.words,(a=>{const r=f.default.trim(a.text);f.default.each(e.patterns,((o,n)=>{if(r.match(o)){f.default.each(a.symbols,(({bbox:{x0:t,y0:a,x1:r,y1:o}})=>{e.coordinates.push({left:t,top:a,right:r,bottom:o})}));const o="pair"===n?i(r):s(r);if(o)return e.lines[n]=o,e.confidence.push(t.confidence),e.patterns=f.default.omit(e.patterns,[n]),!1}}))})),e)),{patterns:n,lines:{},coordinates:[],confidence:[]});return w("info","extractor","Done in",(Date.now()-t)/1e3+"ms."),{signal:c.lines,coordinates:c.coordinates,confidence:f.default.toSafeInteger(f.default.round(f.default.mean(c.confidence)))}}catch(e){throw w("error","extractor",e.message),e}})(i.buffer),g=[h.signal.pair,h.signal.entry,h.signal.stop,h.signal.targets];if(f.default.some(g,f.default.isEmpty))throw w("error","extractor","Invalid input"),new Error("Invalid input");const m={signal:h.signal,confidence:h.confidence};if(r){const t=await(async(e,{cleaned:t,extracted:a,reflect:r})=>{const o=Date.now();w("log","reflector","Starting");try{const n=d.default.resolve(p,"src","mask.mustache"),l=f.default.toString(s.default.readFileSync(n));w("log","reflector","Loading mask template");const i=f.default.map(a.coordinates,(({top:e,left:a,right:r,bottom:o})=>({top:t.crop.top+e,left:t.crop.left+a,width:r-a,height:o-e}))),h={top:f.default.min(f.default.map(i,"top")),left:f.default.min(f.default.map(i,"left")),bottom:f.default.max(f.default.map(i,(({top:e,height:t})=>e+t))),right:f.default.max(f.default.map(i,(({left:e,width:t})=>e+t)))},g=c.default.render(l,{width:t.width,height:t.height,coordinates:i});w("log","reflector","Rendred mask template");const m=[{input:new Buffer.from(g)}],b=await u.default(e).grayscale().composite(m).toBuffer();w("log","reflector","Composited mask layer");const y=await u.default(b).resize({width:680}).toBuffer({resolveWithObject:!0});w("log","reflector","Resized masked");const x=e=>f.default.floor(e*y.info.width/t.width),v=[{input:d.default.resolve(p,"src","tape.svg"),top:x(h.bottom)+20,left:0},{input:d.default.resolve(p,"src","butcher.svg"),top:y.info.height-280,left:x(h.right)+20}],D=await u.default(y.data).composite(v).sharpen().toBuffer();if(w("log","reflector","Composited ui layer"),f.default.isBoolean(r))return w("info","reflector","Done in",(Date.now()-o)/1e3+"ms."),D;const S=d.default.resolve(r);return s.default.writeFileSync(S,D),w("info","reflector","Done in",(Date.now()-o)/1e3+"ms."),S}catch(e){throw w("error","reflector",e.message),e}})(e,{cleaned:i,extracted:h,reflect:r});f.default.set(m,"reflect",t)}w("info","butcher","Done in",(Date.now()-n)/1e3+"ms."),o(m)}catch(e){w("error","butcher",e.message),i(e)}}))};